{"version":3,"sources":["webpack:///../src/index.js","webpack:///./components/WordList/WordList.scss","webpack:///./components/WordList/WordList.tsx","webpack:///./routes/Home/Home.scss","webpack:///./routes/Home/index.tsx"],"names":["getHookState","index","type","options","currentComponent","currentHook","hooks","__","__h","length","push","__V","EMPTY","useState","initialState","reducer","init","hookState","currentIndex","_reducer","invokeOrReturn","action","nextValue","setState","useReducer","flushAfterPaintEffects","component","afterPaintEffects","shift","forEach","invokeCleanup","invokeEffect","e","hook","comp","cleanup","arg","f","previousComponent","prevRaf","WordList","words","class","style","map","rank","word","count","oldBeforeDiff","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","vnode","hookItem","_pendingArgs","undefined","c","requestAnimationFrame","callback","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","some","filter","cb","hasErrored","s","Home","results","setResults","time","setTime","href","rel","target","onClick","fetch","then","res","json","data","timeInMs"],"mappings":"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","file":"route-Home.chunk.0bb28.js","sourcesContent":["import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wordlist\":\"wordlist__JhFmW\"};","import { h } from 'preact';\nimport style from './WordList.scss';\n\ninterface props {\n    words: [string, number][];\n}\n\nexport const WordList = ({ words }: props) => {\n    return (\n        <div class={style.wordlist}>\n            {words.map(([word, count]: [string, number], rank) => {\n                return <li>{`#${rank + 1}: \"${word}\" - (${count} Times)`}</li>;\n            })}\n        </div>\n    );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"home__It8Ue\",\"column\":\"column__STlE0\"};","import { h } from 'preact';\nimport { WordList } from '../../components/WordList/WordList';\nimport { MapItem } from '../../api/wordranker';\nimport style from './Home.scss';\nimport { useEffect, useState } from 'preact/hooks';\n\nconst Home = () => {\n    const [results, setResults] = useState([] as MapItem[]);\n    const [time, setTime] = useState('');\n\n    const queryResults = () => {\n        fetch('/api/results')\n            .then((res) => res.json())\n            .then(({ data, timeInMs }) => {\n                setTime(`Processed words in ${timeInMs}s`);\n                setResults(data);\n            });\n    };\n\n    return (\n        <div class={style.home}>\n            <div class={style.column}>\n                <p>\n                    Clicking \"Process Text!\" will make a call to the API to read\n                    in the Moby Dick text file and stop list.\n                </p>\n                <p>\n                    The top 100 results will be displayed, as well as the\n                    execution time. See the GitHub repo for more context and\n                    technical details: {'   '}\n                    <a\n                        href=\"https://github.com/bmitchinson/word-counter\"\n                        rel=\"noreferrer noopener\"\n                        target=\"_blank\"\n                    >\n                        bmitchinson/word-counter\n                    </a>\n                </p>\n                <p>\n                    Thank you for taking time to view the application 🙏 {'\\n'}\n                    <a\n                        href=\"https://mitchinson.dev\"\n                        rel=\"noreferrer noopener\"\n                        target=\"_blank\"\n                    >\n                        https://mitchinson.dev\n                    </a>\n                </p>\n                <button onClick={queryResults}>Process Text! 🐋</button>\n                {time && <p>{`${time}`}</p>}\n            </div>\n            <div class={style.column}>\n                <WordList words={results} />\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n"],"sourceRoot":""}